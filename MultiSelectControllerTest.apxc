/**
 * This class contains unit tests for validating the behavior of Apex classes
 * and triggers.
 *
 * Unit tests are class methods that verify whether a particular piece
 * of code is working properly. Unit test methods take no arguments,
 * commit no data to the database, and are flagged with the testMethod
 * keyword in the method definition.
 *
 * All test methods in an organization are executed whenever Apex code is deployed
 * to a production organization to confirm correctness, ensure code
 * coverage, and prevent regressions. All Apex classes are
 * required to have at least 75% code coverage in order to be deployed
 * to a production organization. In addition, all triggers must have some code coverage.
 * 
 * The @isTest class annotation indicates this class only contains test
 * methods. Classes defined with the @isTest annotation do not count against
 * the organization size limit for all Apex scripts.
 *
 * See the Apex Language Reference for more information about Testing and Code Coverage.
 */
@isTest
private class MultiSelectControllerTest {
    static testMethod void testMultiSelectController() {
    	// Create some test data
    	List<Country__c> testCountries = new List<Country__c>();
    	for (Integer i = 0; i < 10; i++) {
    		Country__c c = new Country__c(name = 'Test'+i);
            testCountries.add(c);
    	}
    	insert testCountries;
        

        // Test Lead with previously selected country
        Lead testLead = new Lead();
        testLead.lastName = 'Test';
        testLead.company = 'Test';
        testLead.Selected_Countries_List__c = 'Test1';
        insert testLead;
        
        ApexPages.currentPage().getParameters().put('id',testLead.id);
		string posId = ApexPages.currentPage().getParameters().get('id');
        
        MultiSelectController c = new MultiSelectController();
    	
        string selected = testlead.Selected_Countries_List__c;
        
        system.assert(!string.isempty(selected), true);
        
        string [] prevSelected = selected.split(', ');
        
        system.assertEquals(prevSelected.size(), 1);
        
        c.selectedCountries.add(new SelectOption(testlead.Selected_Countries_List__c, testlead.Selected_Countries_List__c));
        
    	
    	List<Country__c> countries = [SELECT Name FROM Country__c];

        c.save();
        
        c.selectedCountries.add(new SelectOption('Test2', 'Test2'));
        c.selectedCountries.add(new SelectOption('Test3', 'Test3'));
        
        c.save();
    }
}
